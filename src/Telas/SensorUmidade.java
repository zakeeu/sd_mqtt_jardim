/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

import Classes.Sensor_Umidade;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.eclipse.paho.client.mqttv3.IMqttDeliveryToken;
import org.eclipse.paho.client.mqttv3.MqttCallback;
import org.eclipse.paho.client.mqttv3.MqttClient;
import org.eclipse.paho.client.mqttv3.MqttConnectOptions;
import org.eclipse.paho.client.mqttv3.MqttException;
import org.eclipse.paho.client.mqttv3.MqttMessage;

/**
 *
 * @author zakee
 */
public class SensorUmidade extends javax.swing.JFrame {

    MqttClient cliente_sub;
    MqttClient cliente_pub;
    private Sensor_Umidade umidade = new Sensor_Umidade();

    /**
     * Creates new form SensorUmidade
     */
    public void pub() throws MqttException {
        
        MqttMessage message = new MqttMessage(String.valueOf(umidade.getUmidade()).getBytes());
        message.setQos(2);
        message.setRetained(true);
        
        try {
            
            cliente_pub.publish("/garden/nowhumidity", message);
            System.out.println("Mensagem publicada com sucesso");
            
        } catch (MqttException ex) {
            
            System.out.println("Erro ao publicar a msg");
            Logger.getLogger(SensorTemperatura.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public SensorUmidade() {
        initComponents();
        try {

            cliente_sub = new MqttClient("tcp://mqtt.eclipseprojects.io:1883", "sub_humidity");
            cliente_pub = new MqttClient("tcp://mqtt.eclipseprojects.io:1883", "pub_humidity");
            MqttConnectOptions options = new MqttConnectOptions();
            
            options.setKeepAliveInterval(10);

            cliente_pub.connect(options);
            System.out.println("Cliente Pub Conectado");
            cliente_sub.connect(options);
            System.out.println("Cliente Sub Conectado");

            cliente_sub.subscribe("/garden/nowtemp", 0);
            cliente_sub.setCallback(new MqttCallback() {

                @Override
                public void connectionLost(Throwable thrwbl) {
                    
                    System.out.println("Conex√£o perdida");
                }

                @Override
                public void messageArrived(String topic, MqttMessage msg) throws Exception {
                    
                    if (topic.equals("/garden/nowtemp")) {

                        String temperatura = msg.toString();
                        int temp = Integer.parseInt(temperatura);
                        umidade.setUmidade(temp);
                        System.out.println("temperatura: " + temperatura + " umidade: " + String.valueOf(umidade.getUmidade()) + " g/kg");
                        lbl_umidade.setText(String.valueOf(umidade.getUmidade()) + " g/kg");

                        pub();
                    }
                }

                @Override
                public void deliveryComplete(IMqttDeliveryToken imdt) {
                    
                    System.out.println("Entrega feita com sucesso");
                }

            });
        } catch (MqttException ex) {
            
            System.out.println("Erro ao conectar com o broker");
            Logger.getLogger(SensorTemperatura.class.getName()).log(Level.SEVERE, null, ex);
        }

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel_umidade = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lbl_umidade = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        painel_umidade.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("UMIDADE");

        lbl_umidade.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lbl_umidade.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout painel_umidadeLayout = new javax.swing.GroupLayout(painel_umidade);
        painel_umidade.setLayout(painel_umidadeLayout);
        painel_umidadeLayout.setHorizontalGroup(
            painel_umidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painel_umidadeLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(painel_umidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painel_umidadeLayout.createSequentialGroup()
                        .addComponent(lbl_umidade, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painel_umidadeLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))))
        );
        painel_umidadeLayout.setVerticalGroup(
            painel_umidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_umidadeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(lbl_umidade, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painel_umidade, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painel_umidade, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SensorUmidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SensorUmidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SensorUmidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SensorUmidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                
                new SensorUmidade().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lbl_umidade;
    private javax.swing.JPanel painel_umidade;
    // End of variables declaration//GEN-END:variables
}
